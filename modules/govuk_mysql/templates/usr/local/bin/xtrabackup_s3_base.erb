#!/bin/bash

exec 1> >(/usr/bin/logger -s -t $(basename $0)) 2>&1

set -e

TMPNAME=base.tmp-$(date '+%s')

# The default Icinga passive alert assumes that the script failed
NAGIOS_CODE=2
NAGIOS_MESSAGE="CRITICAL: MySQL Xtrabackup daily push to S3 failed"

# Triggered whenever this script exits, successful or otherwise. The values
# of CODE/MESSAGE will be taken from that point in time.
function nagios_passive () {
  printf "<%= @ipaddress_eth0 %>\t<%= @base_service_desc %>\t${NAGIOS_CODE}\t${NAGIOS_MESSAGE}\n" | /usr/sbin/send_nsca -H <%= @alert_hostname %> >/dev/null
}

trap nagios_passive EXIT

# Set a new backup date
date +%Y%m%d-%H%M%S > /var/lib/mysql/xtrabackup_date

# Copy the latest backup into a temporary filename
innobackupex --extra-lsndir='/var/lib/mysql/' --encrypt=AES256 --encrypt-key="<%= @encryption_key %>" --stream=xbstream --compress . | envdir /etc/mysql/xtrabackup/env.d /usr/local/bin/gof3r put --endpoint s3-<%= @aws_region -%>.amazonaws.com -b <%= @s3_bucket_name %> -k latest/$TMPNAME

# If a previous backup exists then move it to an archive directory
envdir /etc/mysql/xtrabackup/env.d /usr/local/bin/aws s3 mv s3://<%= @s3_bucket_name %>/latest/base.xbcrypt s3://<%= @s3_bucket_name %>/$(cat /var/lib/mysql/xtrabackup_date)/base.xbcrypt >/dev/null || echo "No previous backup found for archiving"

# Rename the temporary backup to a name used by the restore method
envdir /etc/mysql/xtrabackup/env.d /usr/local/bin/aws s3 mv s3://<%= @s3_bucket_name %>/latest/$TMPNAME s3://<%= @s3_bucket_name %>/latest/base.xbcrypt >/dev/null

if [ $? == 0 ]
  then
    STATUS=0
  else
    STATUS=1
fi

if [ $STATUS -eq 0 ]; then
  NAGIOS_CODE=0
  NAGIOS_MESSAGE="OK: MySQL Xtrabackup daily push to S3 succeeded"
fi

exit $STATUS
