---
- job:
    name: Deploy_App_Downstream
    display-name: Deploy_App_Downstream
    project-type: freestyle
    description: "Kicks off an appliction deploy in a downstream environment"
    properties:
      - build-discarder:
          days-to-keep: 30
          artifact-num-to-keep: 5
    builders:
      - shell: |
          if ! [ "$TAG" = "release_*" ]; then
            echo "Skipping downstream deploy for non-release tag $TAG"
            exit 0
          fi

          <% if @deploy_url %>
          JSON="{\"parameter\": [{\"name\": \"TARGET_APPLICATION\", \"value\": \"$TARGET_APPLICATION\"}, {\"name\": \"TAG\", \"value\": \"$TAG\"}, {\"name\": \"DEPLOY_TASK\", \"value\": \"$DEPLOY_TASK\"}, {\"name\": \"NOTIFY_RELEASE_APP\", \"value\": \"true\"}, {\"name\": \"SLACK_NOTIFICATIONS\", \"value\": \"true\"}], \"\": \"\"}"

          # Deploy to downstream environment
          CRUMB=$(curl https://<%= @jenkins_downstream_api_user %>:<%= @jenkins_downstream_api_password %>@<%= @deploy_url %>/crumbIssuer/api/json | jq --raw-output '. | .crumb')
          curl -f -H "Jenkins-Crumb:$CRUMB" -XPOST https://<%= @jenkins_downstream_api_user %>:<%= @jenkins_downstream_api_password %>@<%= @deploy_url %>/job/Deploy_App/build --data-urlencode json="$JSON"
          <% end %>

          <% if @aws_deploy_url %>
          JSON="{\"parameter\": [{\"name\": \"TARGET_APPLICATION\", \"value\": \"$TARGET_APPLICATION\"}, {\"name\": \"TAG\", \"value\": \"$TAG\"}, {\"name\": \"DEPLOY_TASK\", \"value\": \"$DEPLOY_TASK\"}, {\"name\": \"NOTIFY_RELEASE_APP\", \"value\": \"true\"}, {\"name\": \"SLACK_NOTIFICATIONS\", \"value\": \"true\"}], \"\": \"\"}"

          # Deploy to downstream AWS environment
          CRUMB=$(curl https://<%= @jenkins_downstream_aws_api_user %>:<%= @jenkins_downstream_aws_api_password %>@<%= @aws_deploy_url %>/crumbIssuer/api/json | jq --raw-output '. | .crumb')
          curl -f -H "Jenkins-Crumb:$CRUMB" -XPOST https://<%= @jenkins_downstream_aws_api_user %>:<%= @jenkins_downstream_aws_api_password %>@<%= @aws_deploy_url %>/job/Deploy_App/build --data-urlencode json="$JSON"
          <% end %>
    wrappers:
        - ansicolor:
            colormap: xterm
    parameters:
        - string:
            name: TARGET_APPLICATION
            description: 'Application to deploy'
        - string:
            name: TAG
            description: 'Git tag/committish to deploy.'
        - choice:
            name: DEPLOY_TASK
            description: 'Task to run (available as $DEPLOY_TASK to deploy.sh and passed explicitly to Capistrano).'
            choices:
              - deploy
              - deploy:migrations
              - deploy:setup
    publishers:
        - description-setter:
            regexp: ""
            description: "$TARGET_APPLICATION $TAG"
